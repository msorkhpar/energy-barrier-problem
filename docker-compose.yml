version: '3'
services:
  random-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: energy-barrier-solver:1.1
    container_name: energy-barrier-solver-random
    depends_on:
      random-db:
        condition: service_healthy
    command: python3 main.py
    environment:
      TZ: America/Indiana/Indianapolis
      PYTHONUNBUFFERED: 1
      GRAPH_GENERATOR_TYPE: RANDOM_BIGRAPH
      WITH_PRICES: ${WITH_PRICES}
      NUMBER_OF_PROCESSES: ${NUMBER_OF_PROCESSES}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./plan-random.csv:/app/plan-random.csv
    deploy:
      resources:
        limits:
          cpus: "10"
          memory: 50GB
        reservations:
          cpus: "1"
          memory: 2GB
    networks:
      - random
    profiles:
      - random
  intersection-app:
    build:
      context: .
      dockerfile: Dockerfile
    image: energy-barrier-solver:1.1
    container_name: energy-barrier-solver-intersection
    depends_on:
      intersection-db:
          condition: service_healthy
    command: python3 main.py
    environment:
      TZ: America/Indiana/Indianapolis
      PYTHONUNBUFFERED: 1
      GRAPH_GENERATOR_TYPE: INTERSECTION
      WITH_PRICES: ${WITH_PRICES}
      NUMBER_OF_PROCESSES: ${NUMBER_OF_PROCESSES}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./plan-intersection.csv:/app/plan-intersection.csv
    deploy:
      resources:
        limits:
          cpus: "10"
          memory: 50GB
        reservations:
          cpus: "2"
          memory: 2GB
    networks:
      - intersection
    profiles:
      - intersection

  random-db:
    image: postgres
    restart: unless-stopped
    container_name: random-pg-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: "exit 0"
    volumes:
      - ./random-db-data:/var/lib/postgresql/data
    networks:
      - random
    profiles:
      - random

  intersection-db:
    image: postgres
    restart: unless-stopped
    container_name: intersection-pg-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: "exit 0"
    volumes:
      - ./intersection-db-data:/var/lib/postgresql/data
    networks:
      - intersection
    profiles:
      - intersection


networks:
  random:
    driver: bridge
  intersection:
    driver: bridge